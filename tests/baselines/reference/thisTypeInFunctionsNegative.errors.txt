tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts(5,21): error TS2339: Property 'notFound' does not exist on type '{ y: number; }'.
tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts(8,21): error TS2339: Property 'notSpecified' does not exist on type 'void'.
tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts(14,1): error TS2346: Supplied parameters do not match any signature of call target.
tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts(15,6): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts(17,1): error TS2345: Argument of type '{ y: string; f: (this: { y: number; }, x: number) => number; }' is not assignable to parameter of type '{ y: number; }'.
  Types of property 'y' are incompatible.
    Type 'string' is not assignable to type 'number'.
tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts(18,1): error TS2345: Argument of type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' is not assignable to parameter of type '{ y: number; }'.
  Property 'y' is missing in type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }'.


==== tests/cases/conformance/types/thisType/thisTypeInFunctionsNegative.ts (6 errors) ====
    function f(this: { y: number }, x: number): number {
        return x + this.y;
    }
    function propertyName(this: { y: number }, x: number): number {
        return x + this.notFound;
                        ~~~~~~~~
!!! error TS2339: Property 'notFound' does not exist on type '{ y: number; }'.
    }
    function voidThisSpecified(this: void, x: number): number {
        return x + this.notSpecified;
                        ~~~~~~~~~~~~
!!! error TS2339: Property 'notSpecified' does not exist on type 'void'.
    }
    let ok: {y: number, f: (this: { y: number }, x: number) => number} = { y: 12, f };
    let wrongPropertyType: {y: string, f: (this: { y: number }, x: number) => number} = { y: 'foo', f };
    let wrongPropertyName: {wrongName: number, f: (this: { y: number }, x: number) => number} = { wrongName: 12, f };
    
    ok.f(); // not enough arguments
    ~~~~~~
!!! error TS2346: Supplied parameters do not match any signature of call target.
    ok.f('wrong type');
         ~~~~~~~~~~~~
!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
    ok.f(13, 'too many arguments');
    wrongPropertyType.f(13);
    ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ y: string; f: (this: { y: number; }, x: number) => number; }' is not assignable to parameter of type '{ y: number; }'.
!!! error TS2345:   Types of property 'y' are incompatible.
!!! error TS2345:     Type 'string' is not assignable to type 'number'.
    wrongPropertyName.f(13);
    ~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' is not assignable to parameter of type '{ y: number; }'.
!!! error TS2345:   Property 'y' is missing in type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }'.
    